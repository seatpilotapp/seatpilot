name: Supabase SQL CI (syntax & order)

on:
  pull_request:
    paths:
      - 'supabase/sql/**'
  workflow_dispatch: {}

jobs:
  sql-ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4
      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Apply SQL 100→105 in order
        env:
          PGURL: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          set -euo pipefail
          psql "$PGURL" -v ON_ERROR_STOP=1 -c "create extension if not exists pgcrypto;"
          psql "$PGURL" -v ON_ERROR_STOP=1 -f supabase/sql/100_entitlements_metering.sql
          psql "$PGURL" -v ON_ERROR_STOP=1 -f supabase/sql/101_metering_functions.sql
          psql "$PGURL" -v ON_ERROR_STOP=1 -f supabase/sql/102_billing_views.sql
          psql "$PGURL" -v ON_ERROR_STOP=1 -f supabase/sql/103_rls_entitlements.sql
          # cron depende de extensión; solo valida sintaxis del bloque DO $$ … $$ si existe
          if [ -f supabase/sql/104_cron.sql ]; then
            sed 's/cron\.schedule/NULL::int/g' supabase/sql/104_cron.sql | psql "$PGURL" -v ON_ERROR_STOP=1 || true
          fi
          if [ -f supabase/sql/105_seed_plans.sql ]; then
            psql "$PGURL" -v ON_ERROR_STOP=1 -f supabase/sql/105_seed_plans.sql
          fi
      - name: Smoke SQL views
        env: { PGURL: postgresql://postgres:postgres@localhost:5432/postgres }
        run: |
          psql "$PGURL" -c "\\dt"
          psql "$PGURL" -c "select * from plans;"
          psql "$PGURL" -c "select table_name from information_schema.views where table_name like 'v_tenant_%';"
