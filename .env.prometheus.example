# Copy this file to `.env.prometheus` and fill in the values.
# Never commit the real `.env.prometheus` file since it contains secrets.
# Supabase service role JWT used for scraping the privileged metrics endpoint.
# Obtain it from Supabase → Project Settings → API → service_role.
SUPABASE_SERVICE_ROLE_JWT=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmd3B0dXB3cnFkaHhlZ3h1ZXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MDM3MTQ5MywiZXhwIjoyMDc1OTQ3NDkzfQ.xYvirOR4XrpdgYF5wwBS7qtVv41pCJZ_Tlk5eTz7NQI

# Optional: custom path for the bearer token file written by run-prometheus.sh.
# Leave empty to default to .tmp/supabase_service_role.jwt relative to the repo root.
SUPABASE_TOKEN_FILE=

# Path to the Prometheus binary relative to the repository root.
PROM_BIN=./prometheus-3.7.0-rc.0.darwin-amd64/prometheus

# Path to the Prometheus configuration file to render with secrets.
PROM_CONFIG=prometheus.yml

# TSDB storage path for Prometheus.
PROM_STORAGE_PATH=./data

# Optional: port where Prometheus should listen (used for pre-launch checks).
PROM_LISTEN_PORT=9090

# Supabase metrics endpoint that Prometheus scrapes (used for pre-flight checks).
SUPABASE_METRICS_URL=https://qfwptupwrqdhxegxueuc.supabase.co/customer/v1/privileged/metrics

# Set to "true" to skip the Supabase connectivity validation (not recommended).
SKIP_SUPABASE_CHECK=false
